# Airflow Service Account for RBAC
apiVersion: v1
kind: ServiceAccount
metadata:
  name: airflow-service-account
  namespace: {{ namespace_name }}
---
# Airflow Role for Pod Management
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: {{ namespace_name }}
  name: {{ airflow_k8s_name }}-pod-manager
rules:
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
- apiGroups: [""]
  resources: ["pods/log"]
  verbs: ["get", "list"]
- apiGroups: [""]
  resources: ["pods/exec"]
  verbs: ["create"]
- apiGroups: [""]
  resources: ["events"]
  verbs: ["get", "list"]
---
# Airflow RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{ airflow_k8s_name }}-pod-manager-binding
  namespace: {{ namespace_name }}
subjects:
- kind: ServiceAccount
  name: {{ airflow_k8s_name }}-service-account
  namespace: {{ namespace_name }}
roleRef:
  kind: Role
  name: {{ airflow_k8s_name }}-pod-manager
  apiGroup: rbac.authorization.k8s.io
---
# Airflow DAGs PVC
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ airflow_k8s_name }}-dags-pvc
  namespace: {{ namespace_name }}
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
# Airflow Logs PVC
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ airflow_k8s_name }}-logs-pvc
  namespace: {{ namespace_name }}
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
# Airflow ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ airflow_k8s_name }}-config
  namespace: {{ namespace_name }}
data:
  airflow.cfg: |
    [core]
    executor = LocalExecutor
    sql_alchemy_conn = postgresql+psycopg2://$({{ postgres_credential_secret_name}}_USER):$({{ postgres_credential_secret_name }}_PASSWORD)@{{ postgres_hostname }}:{{ postgres_port }}/{{ airflow_k8s_name }}_db
    dags_folder = /opt/airflow/dags
    load_examples = False

    [webserver]
    web_server_host = 0.0.0.0
    web_server_port = 8080

    [logging]
    base_log_folder = /opt/airflow/logs
    remote_logging = False

    [database]
    sql_alchemy_conn = postgresql+psycopg2://$({{ postgres_credential_secret_name}}_USER):$({{ postgres_credential_secret_name }}_PASSWORD)@{{ postgres_hostname }}:{{ postgres_port }}/{{ airflow_k8s_name }}_db
---
# Airflow Scheduler Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ airflow_k8s_name }}-scheduler
  namespace: {{ namespace_name }}
  labels:
    app: {{ airflow_k8s_name }}-scheduler
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ airflow_k8s_name }}-scheduler
  template:
    metadata:
      labels:
        app: {{ airflow_k8s_name }}-scheduler
    spec:
      serviceAccountName: {{ airflow_k8s_name }}-service-account
      initContainers:
      - name: airflow-db-init
        image: apache/airflow:2.8.1
        command: ["/bin/bash", "-c"]
        args:
          - airflow db init
        envFrom:
          - secretRef:
              name: {{ postgres_credential_secret_name }}
        env:
          - name: AIRFLOW__DATABASE__SQL_ALCHEMY_CONN
            value: "postgresql+psycopg2://$({{ postgres_credential_secret_name }}_USER):$({{ postgres_credential_secret_name }}_PASSWORD)@{{ postgres_hostname }}:{{ postgres_port }}/{{ airflow_k8s_name }}_db"
        volumeMounts:
          - name: airflow-dags
            mountPath: /opt/airflow/dags
          - name: airflow-logs
            mountPath: /opt/airflow/logs
          - name: airflow-config
            mountPath: /opt/airflow/airflow.cfg
            subPath: airflow.cfg
      containers:
        - name: {{ airflow_k8s_name }}-scheduler
          image: apache/airflow:2.8.1
          command: ["airflow", "scheduler"]
          envFrom:
            - secretRef:
                name: {{ postgres_credential_secret_name }}
            - secretRef:
                name: {{ git_credential_secret_name }}
            - configMapRef:
                name: {{ psp_k8s_name }}-logging-config
          env:
            - name: AIRFLOW_UID
              value: "50000"
            - name: AIRFLOW__DATABASE__SQL_ALCHEMY_CONN
              value: "postgresql+psycopg2://$({{ postgres_credential_secret_name }}_USER):$({{ postgres_credential_secret_name }}_PASSWORD)@{{ postgres_hostname }}:{{ postgres_port }}/{{ airflow_k8s_name }}_db"
            - name: GIT_REPO_URL
              value: "{{ git_repo_url }}"
            - name: GIT_REPO_BRANCH
              value: "{{ git_repo_branch }}"
            - name: GIT_REPO_NAME
              value: "{{ git_repo_name }}"
            # Kubernetes-specific environment variables for logging context
            - name: HOSTNAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            # Logging configuration
            - name: LOG_LEVEL
              value: "INFO"
            - name: LOG_FORMAT
              value: "json"
            - name: YELLOW_ENVIRONMENT
              value: "production"
            - name: YELLOW_JOB_TYPE
              value: "airflow-scheduler"
            # Extra Factory DAG credentials (needed for dynamic DAG creation)
            {% for cred in extra_credentials %}
            - name: {{ cred }}_USER
              valueFrom:
                secretKeyRef:
                  name: {{ cred }}
                  key: {{ cred }}_USER
            - name: {{ cred }}_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ cred }}
                  key: {{ cred }}_PASSWORD
            {% endfor %}
          volumeMounts:
            - name: airflow-dags
              mountPath: /opt/airflow/dags
            - name: airflow-logs
              mountPath: /opt/airflow/logs
            - name: airflow-config
              mountPath: /opt/airflow/airflow.cfg
              subPath: airflow.cfg
            - name: git-repo
              mountPath: /opt/datasurface/model
              readOnly: true
          resources:
            requests:
              memory: "2Gi"
              cpu: "500m"
            limits:
              memory: "4Gi"
              cpu: "1000m"
      volumes:
        - name: airflow-dags
          persistentVolumeClaim:
            claimName: {{ airflow_k8s_name }}-dags-pvc
        - name: airflow-logs
          persistentVolumeClaim:
            claimName: {{ airflow_k8s_name }}-logs-pvc
        - name: airflow-config
          configMap:
            name: {{ airflow_k8s_name }}-config
        - name: git-repo
          emptyDir: {}
---
# Airflow Webserver Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ airflow_k8s_name }}-webserver
  namespace: {{ namespace_name }}
  labels:
    app: {{ airflow_k8s_name }}-webserver
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ airflow_k8s_name }}-webserver
  template:
    metadata:
      labels:
        app: {{ airflow_k8s_name }}-webserver
    spec:
      serviceAccountName: {{ airflow_k8s_name }}-service-account
      containers:
        - name: {{ airflow_k8s_name }}-webserver
          image: apache/airflow:2.8.1
          command: ["airflow", "webserver"]
          ports:
            - containerPort: 8080
          envFrom:
            - secretRef:
                name: {{ postgres_credential_secret_name }}
            - secretRef:
                name: {{ git_credential_secret_name }}
            - configMapRef:
                name: {{ psp_k8s_name }}-logging-config
          env:
            - name: AIRFLOW_UID
              value: "50000"
            - name: AIRFLOW__DATABASE__SQL_ALCHEMY_CONN
              value: "postgresql+psycopg2://$({{ postgres_credential_secret_name }}_USER):$({{ postgres_credential_secret_name }}_PASSWORD)@{{ postgres_hostname }}:{{ postgres_port }}/{{ airflow_k8s_name }}_db"
            - name: GIT_REPO_URL
              value: "{{ git_repo_url }}"
            - name: GIT_REPO_BRANCH
              value: "{{ git_repo_branch }}"
            - name: GIT_REPO_NAME
              value: "{{ git_repo_name }}"
            # Kubernetes-specific environment variables for logging context
            - name: HOSTNAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            # Logging configuration
            - name: LOG_LEVEL
              value: "INFO"
            - name: LOG_FORMAT
              value: "json"
            - name: YELLOW_ENVIRONMENT
              value: "production"
            - name: YELLOW_JOB_TYPE
              value: "airflow-webserver"
          volumeMounts:
            - name: airflow-dags
              mountPath: /opt/airflow/dags
            - name: airflow-logs
              mountPath: /opt/airflow/logs
            - name: airflow-config
              mountPath: /opt/airflow/airflow.cfg
              subPath: airflow.cfg
            - name: git-repo
              mountPath: /opt/datasurface/model
              readOnly: true
          resources:
            requests:
              memory: "1Gi"
              cpu: "500m"
            limits:
              memory: "2Gi"
              cpu: "1000m"
      volumes:
        - name: airflow-dags
          persistentVolumeClaim:
            claimName: {{ airflow_k8s_name }}-dags-pvc
        - name: airflow-logs
          persistentVolumeClaim:
            claimName: {{ airflow_k8s_name }}-logs-pvc
        - name: airflow-config
          configMap:
            name: {{ airflow_k8s_name }}-config
        - name: git-repo
          emptyDir: {}
---
# Airflow Webserver Service
apiVersion: v1
kind: Service
metadata:
  name: {{ airflow_k8s_name }}-webserver-service
  namespace: {{ namespace_name }}
spec:
  type: LoadBalancer
  selector:
    app: {{ airflow_k8s_name }}-webserver
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
---
