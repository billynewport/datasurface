# DataSurface Container Image for Kubernetes PG Starter
# This image contains Python and the DataSurface source code for running tasks


FROM python:3.13-slim

# Set environment variables
ENV PYTHONUNBUFFERED=1
ENV PYTHONDONTWRITEBYTECODE=1
ENV PIP_NO_CACHE_DIR=1
ENV ACCEPT_EULA=Y

# Install system dependencies, unixODBC, and Microsoft ODBC Driver 18 for SQL Server
RUN apt-get update && apt-get install -y \
    git \
    curl \
    gnupg \
    ca-certificates \
    apt-transport-https \
    libpq-dev \
    unixodbc \
    unixodbc-dev \
    build-essential \
    && curl -fsSL https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor -o /usr/share/keyrings/microsoft.gpg \
    && echo "deb [arch=amd64,arm64,armhf signed-by=/usr/share/keyrings/microsoft.gpg] https://packages.microsoft.com/debian/12/prod bookworm main" > /etc/apt/sources.list.d/microsoft-prod.list \
    && apt-get update && apt-get install -y msodbcsql18 \
    && rm -rf /var/lib/apt/lists/* /usr/share/keyrings/microsoft.gpg

# Set working directory
WORKDIR /app

# Copy requirements first for better caching
COPY requirements.txt .

# Install Python dependencies
RUN pip install --no-cache-dir -r requirements.txt

# Copy the DataSurface source code and setup files
COPY src/ /app/src/
COPY setup.py /app/
COPY MANIFEST.in /app/
COPY README.md /app/
COPY requirements.txt /app/

# Install DataSurface in development mode
RUN pip install -e /app/

# Create workspace directory for Git repository
RUN mkdir -p /workspace/model

# Set default command
CMD ["python", "-c", "import datasurface; print('DataSurface container ready')"] 